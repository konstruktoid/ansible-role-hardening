---
- name: Verify
  hosts: all
  any_errors_fatal: true

  tasks:
    - name: reboot host
      become: 'yes'
      reboot:

    - name: wait for the host and reconnect
      wait_for:
        port: 22
        host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        delay: 10
        timeout: 120

    - name: include default vars
      include_vars:
        dir: ../../defaults/
        extensions:
          - 'yml'

    - name: verify auditd configuration
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/audit/auditd.conf
      register: auditd_conf
      failed_when: auditd_conf.rc != 0
      with_items:
        - action_mail_acct = {{ auditd_action_mail_acct }}
        - admin_space_left_action = {{ auditd_admin_space_left_action }}
        - disk_error_action = {{ auditd_disk_error_action }}
        - disk_full_action = {{ auditd_disk_full_action }}
        - max_log_file = {{ auditd_max_log_file }}
        - max_log_file_action = {{ auditd_max_log_file_action }}
        - num_logs = {{ auditd_num_logs }}
        - space_left = {{ auditd_space_left }}
        - space_left_action = {{ auditd_space_left_action }}

    - name: verify systemd system.conf
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/systemd/system.conf
      register: systemd_system_conf
      failed_when: systemd_system_conf.rc != 0
      with_items:
        - DumpCore=no
        - CrashShell=no
        - CtrlAltDelBurstAction=none
        - DefaultLimitCORE=0
        - DefaultLimitNOFILE={{ limit_nofile_hard }}
        - DefaultLimitNPROC={{ limit_nproc_hard }}

    - name: verify systemd user.conf
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/systemd/user.conf
      register: systemd_user_conf
      failed_when: systemd_user_conf.rc != 0
      with_items:
        - DefaultLimitCORE=0
        - DefaultLimitNOFILE={{ limit_nofile_hard }}
        - DefaultLimitNPROC={{ limit_nproc_hard }}

    - name: verify postfix configuration
      become: 'yes'
      shell: grep -c "^{{ item }}$" /etc/postfix/main.cf
      register: auditd_conf
      failed_when: auditd_conf.rc != 0 and auditd_conf.stdout != "1"
      with_items:
        - disable_vrfy_command = yes
        - inet_interfaces = loopback-only
        - smtpd_banner = \"\\\\\$myhostname - ESMTP\"
        - smtpd_client_restrictions = permit_mynetworks,reject

    - name: stat /etc/ssh/sshd_config
      stat:
        path: '/etc/ssh/sshd_config'
      register: perm_sshd_config

    - name: stat /etc/ssh/ssh_config
      stat:
        path: '/etc/ssh/ssh_config'
      register: perm_ssh_config

    - name: assert /etc/ssh/ssh_config permissions
      assert:
        that:
          - perm_ssh_config.stat.mode == "0644"
        success_msg: "{{ perm_ssh_config.stat.path }} has correct permissions: {{ perm_ssh_config.stat.mode }}"
        fail_msg: "{{ perm_ssh_config.stat.path }} permissions are incorrect: {{ perm_ssh_config.stat.mode }}"

    - name: assert /etc/ssh/sshd_config permissions
      assert:
        that:
          - perm_sshd_config.stat.mode == "0600"
        success_msg: "{{ perm_sshd_config.stat.path }} has correct permissions: {{ perm_sshd_config.stat.mode }}"
        fail_msg: "{{ perm_sshd_config.stat.path }} permissions are incorrect: {{ perm_sshd_config.stat.mode }}"

    - name: verify sshd_config PermitRootLogin configuration
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/ssh/sshd_config
      register: sshd_config
      failed_when: sshd_config.rc == 0
      with_items:
        - PermitRootLogin yes

    - name: verify sshd_config configuration
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/ssh/sshd_config
      register: sshd_config
      failed_when: sshd_config.rc != 0
      with_items:
        - AllowGroups vagrant sudo
        - AllowAgentForwarding {{ sshd_allow_agent_forwarding }}
        - AllowTcpForwarding {{ sshd_allow_tcp_forwarding }}
        - AuthenticationMethods {{ sshd_authentication_methods }}
        - Banner {{ sshd_banner }}
        - ChallengeResponseAuthentication {{ sshd_challenge_response_authentication }}
        - Ciphers {{ sshd_ciphers }}
        - ClientAliveCountMax {{ sshd_client_alive_count_max|int }}
        - ClientAliveInterval {{ sshd_client_alive_interval|int }}
        - Compression {{ sshd_compression }}
        - GSSAPIAuthentication {{ sshd_gssapi_authentication }}
        - HostbasedAuthentication {{ sshd_hostbased_authentication }}
        - IgnoreUserKnownHosts {{ sshd_ignore_user_known_hosts }}
        - KerberosAuthentication {{ sshd_kerberos_authentication }}
        - KexAlgorithms {{ sshd_kex_algorithms }}
        - LogLevel {{ sshd_log_level }}
        - LoginGraceTime {{ sshd_login_grace_time|int }}
        - Macs {{ sshd_macs }}
        - MaxAuthTries {{ sshd_max_auth_tries|int }}
        - MaxSessions {{ sshd_max_sessions|int }}
        - MaxStartups {{ sshd_max_startups }}
        - PasswordAuthentication {{ sshd_password_authentication }}
        - PermitEmptyPasswords {{ sshd_permit_empty_passwords }}
        - PermitRootLogin {{ sshd_permit_root_login }}
        - PermitUserEnvironment {{ sshd_permit_user_environment }}
        - Port {{ sshd_port|int }}
        - PrintLastLog {{ sshd_print_last_log }}
        - PrintMotd {{ sshd_print_motd }}
        - RekeyLimit {{ sshd_rekey_limit }}
        - StrictModes {{ sshd_strict_modes }}
        - Subsystem {{ sshd_subsystem }}
        - TCPKeepAlive {{ sshd_tcp_keep_alive }}
        - UseDNS {{ sshd_use_dns }}
        - UsePAM {{ sshd_use_pam }}
        - X11Forwarding {{ sshd_x11_forwarding }}

    - name: verify ssh_config configuration
      become: 'yes'
      shell: grep "^    {{ item }}$" /etc/ssh/ssh_config
      register: ssh_config
      failed_when: ssh_config.rc != 0
      with_items:
        - Ciphers {{ sshd_ciphers }}
        - GSSAPIAuthentication {{ sshd_gssapi_authentication }}
        - HashKnownHosts yes
        - MACs {{ sshd_macs }}
        - RekeyLimit {{ sshd_rekey_limit }}

    - name: verify sysctl configuration
      become: 'yes'
      shell: grep -R "^{{ item }}$" /etc/sysctl.*
      register: sysctl_config
      failed_when: sysctl_config.rc != 0
      with_items:
        - fs.protected_hardlinks=1
        - fs.protected_symlinks=1
        - fs.suid_dumpable=0
        - kernel.core_uses_pid=1
        - kernel.dmesg_restrict=1
        - kernel.kptr_restrict=2
        - kernel.panic=60
        - kernel.panic_on_oops=60
        - kernel.perf_event_paranoid=2
        - kernel.randomize_va_space=2
        - kernel.sysrq=0
        - kernel.unprivileged_bpf_disabled=1
        - kernel.yama.ptrace_scope=2
        - net.core.bpf_jit_harden=2
        - net.ipv4.conf.all.accept_redirects=0
        - net.ipv4.conf.all.accept_source_route=0
        - net.ipv4.conf.all.log_martians=1
        - net.ipv4.conf.all.rp_filter=1
        - net.ipv4.conf.all.secure_redirects=0
        - net.ipv4.conf.all.send_redirects=0
        - net.ipv4.conf.all.shared_media=0
        - net.ipv4.conf.default.accept_redirects=0
        - net.ipv4.conf.default.accept_source_route=0
        - net.ipv4.conf.default.log_martians=1
        - net.ipv4.conf.default.rp_filter=1
        - net.ipv4.conf.default.secure_redirects=0
        - net.ipv4.conf.default.send_redirects=0
        - net.ipv4.conf.default.shared_media=0
        - net.ipv4.icmp_echo_ignore_broadcasts=1
        - net.ipv4.icmp_ignore_bogus_error_responses=1
        - net.ipv4.ip_forward=0
        - net.ipv4.tcp_challenge_ack_limit=2147483647
        - net.ipv4.tcp_invalid_ratelimit=500
        - net.ipv4.tcp_max_syn_backlog=20480
        - net.ipv4.tcp_rfc1337=1
        - net.ipv4.tcp_syn_retries=5
        - net.ipv4.tcp_synack_retries=2
        - net.ipv4.tcp_syncookies=1
        - net.ipv4.tcp_timestamps=0
        - net.ipv6.conf.all.accept_ra=0
        - net.ipv6.conf.all.accept_redirects=0
        - net.ipv6.conf.all.accept_source_route=0
        - net.ipv6.conf.all.forwarding=0
        - net.ipv6.conf.all.use_tempaddr=2
        - net.ipv6.conf.default.accept_ra=0
        - net.ipv6.conf.default.accept_ra_defrtr=0
        - net.ipv6.conf.default.accept_ra_pinfo=0
        - net.ipv6.conf.default.accept_ra_rtr_pref=0
        - net.ipv6.conf.default.accept_redirects=0
        - net.ipv6.conf.default.accept_source_route=0
        - net.ipv6.conf.default.autoconf=0
        - net.ipv6.conf.default.dad_transmits=0
        - net.ipv6.conf.default.max_addresses=1
        - net.ipv6.conf.default.router_solicitations=0
        - net.ipv6.conf.default.use_tempaddr=2
        - net.netfilter.nf_conntrack_max=2000000
        - net.netfilter.nf_conntrack_tcp_loose=0

    - name: stat crypto-policies config
      become: 'yes'
      stat:
        path: /etc/crypto-policies/config
      register: crypto_policies_config

    - name: get crypto-policies value
      environment:
        PATH: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
      command: grep "^{{ crypto_policy|upper }}$" /etc/crypto-policies/config
      register: crypto_policy_set
      when: crypto_policies_config.stat.exists
      failed_when: crypto_policy_set.rc != 0

    - name: verify noexec /dev/shm
      become: 'yes'
      shell: grep '^tmpfs\s/dev/shm.*noexec' /proc/mounts
      register: dev_shm_noexec
      failed_when: dev_shm_noexec.rc != 0

    - name: verify /tmp
      become: 'yes'
      shell: grep '^tmpfs\s/tmp\s.*nosuid,nodev,noexec\s' /proc/mounts
      register: mnt_tmp
      failed_when: mnt_tmp.rc != 0

    - name: verify login.defs settings
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/login.defs
      register: login_defs
      failed_when: login_defs.rc != 0
      with_items:
        - ENCRYPT_METHOD SHA512
        - FAILLOG_ENAB yes
        - LOG_OK_LOGINS yes
        - PASS_MAX_DAYS 60
        - PASS_MIN_DAYS 1
        - PASS_WARN_AGE 7
        - SHA_CRYPT_MAX_ROUNDS 65536
        - SHA_CRYPT_MIN_ROUNDS 10000
        - SU_NAME su
        - SYSLOG_SG_ENAB yes
        - SYSLOG_SU_ENAB yes
        - UMASK 077

    - name: verify pwquality.conf settings
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/security/pwquality.conf
      register: pwquality_conf
      failed_when: pwquality_conf.rc != 0
      with_items:
        - difok = 15
        - dictcheck = 1
        - enforcing = 1
        - maxrepeat = 3
        - minclass = 3
        - minlen = 15
        - dcredit = -1
        - lcredit = -1
        - ocredit = -1
        - ucredit = -1

    - name: verify audit grubenv
      become: 'yes'
      shell: grep "{{ grub_audit_cmdline }} {{ grub_audit_backlog_cmdline }}" /boot/grub2/grubenv
      register: audit_grubenv
      failed_when: audit_grubenv.rc != 0
      when: ansible_os_family == "RedHat"

    - name: verify audit grub.cfg
      become: 'yes'
      shell: grep "linux.*{{ grub_audit_cmdline }} {{ grub_audit_backlog_cmdline }}" /boot/grub/grub.cfg
      register: audit_grub_cfg
      failed_when: audit_grub_cfg.rc != 0
      when: ansible_os_family == "Debian"

    - name: verify systemd resolved.conf
      become: 'yes'
      shell: grep "^{{ item }}$" /etc/systemd/resolved.conf
      register: systemd_resolved_conf
      failed_when: systemd_resolved_conf.rc != 0
      with_items:
        - DNS={{ dns }}
        - FallbackDNS={{ fallback_dns }}
        - DNSSEC={{ dnssec }}
        - DNSOverTLS={{ dns_over_tls }}

    - name: verify /tmp mount
      shell: mount | grep -oE '^tmpfs.*\s/tmp\s.*tmpfs.*(nosuid|nodev|noexec)'
      register: tmp_mount
      failed_when: tmp_mount.rc != 0
...
