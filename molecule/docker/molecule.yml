---
dependency:
  name: galaxy
  enabled: true
driver:
  name: docker
provisioner:
  name: ansible
  config_options:
    defaults:
      callback_whitelist: profile_tasks
  env:
    ANSIBLE_ROLES_PATH: ~/.cache/molecule/ansible-role-hardening/${MOLECULE_SCENARIO_NAME}/roles:${MOLECULE_PROJECT_DIRECTORY}/..:~/.ansible/roles:/usr/share/ansible/roles:/etc/ansible/roles
  playbooks:
    converge: ../default/converge.yml
    verify: ../default/verify.yml
  log: true
  inventory:
    host_vars:
      bookworm:
        ansible_become_pass: vagrant
        ansible_python_interpreter: /usr/bin/python3
        automatic_updates:
          enabled: true
          only_security: true
          reboot: false
          reboot_from_time: "2:00"
          reboot_time_margin_mins: 1
        disable_wireless: false
        sshd_admin_net:
          - 0.0.0.0/0
        sshd_allow_groups:
          - vagrant
          - sudo
        sshd_update_moduli: true
        system_upgrade: false
      noble:
        automatic_updates:
          enabled: true
          only_security: true
          reboot: false
          reboot_from_time: "2:00"
          reboot_time_margin_mins: 1
        disable_ipv6: true
        disable_wireless: true
        manage_suid_sgid_permissions: false
        sshd_admin_net:
          - 0.0.0.0/0
        sshd_allow_groups:
          - vagrant
          - sudo
        sshd_match_users:
          - user: testuser01
            rules:
              - AllowUsers testuser01
              - AuthenticationMethods password
              - PasswordAuthentication yes
          - user: testuser02
            rules:
              - AllowUsers testuser02
              - Banner none
platforms:
  - name: bookworm
    image: docker.io/debian:bookworm
    privileged: true
    volume_mounts:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
  - name: noble
    image: docker.io/ubuntu:noble
    privileged: true
    volume_mounts:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
verifier:
  name: ansible
scenario:
  name: docker
  create_sequence:
    - dependency
    - create
    - prepare
  check_sequence:
    - dependency
    - cleanup
    - destroy
    - create
    - prepare
    - converge
    - check
    - destroy
  converge_sequence:
    - dependency
    - create
    - prepare
    - converge
  destroy_sequence:
    - dependency
    - cleanup
    - destroy
  test_sequence:
    - dependency
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - destroy
