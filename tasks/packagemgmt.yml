---
- name: Apt configuration and upgrades
  become: true
  when:
    - ansible_facts.os_family == "Debian"
  tags:
    - apt
  block:
    - name: Configure apt
      ansible.builtin.lineinfile:
        dest: /etc/apt/apt.conf.d/98-hardening-ubuntu
        mode: "0644"
        state: present
        create: true
        line: "{{ item }}"
      loop: "{{ apt_hardening_options }}"
      when:
        - manage_package_managers

    - name: Run apt update
      become: true
      ansible.builtin.apt:
        update_cache: true
      register: cache_updated
      changed_when: false
      until:
        - cache_updated is success

    - name: Run apt upgrade
      become: true
      ansible.builtin.apt:
        upgrade: safe
      register: apt_upgrade_response
      changed_when:
        - "'0 upgraded, 0 newly installed, 0 to remove' not in apt_upgrade_response.stdout"
      until:
        - apt_upgrade_response is success
      when:
        - system_upgrade | bool
      notify:
        - Run apt-get clean
        - Run apt-get autoremove

- name: Dnf configuration
  become: true
  when:
    - ansible_facts.os_family == "RedHat"
    - manage_package_managers
  tags:
    - dnf
    - yum
  block:
    - name: Link dnf.conf
      ansible.builtin.file:
        src: /etc/dnf/dnf.conf
        dest: /etc/yum.conf
        owner: root
        group: root
        state: link
      when:
        - ansible_facts.distribution == "Fedora"

    - name: Set yum.conf gpgcheck
      ansible.builtin.lineinfile:
        regexp: ^gpgcheck=
        line: gpgcheck=1
        dest: /etc/yum.conf
        mode: "0644"
        state: present
        create: false
        backrefs: true

    - name: Set yum.conf clean_requirements
      ansible.builtin.lineinfile:
        line: clean_requirements_on_remove=True
        dest: /etc/yum.conf
        mode: "0644"
        state: present
        create: true
        insertafter: "[main]"

    - name: Set yum.conf localpkg_gpgcheck
      ansible.builtin.lineinfile:
        line: localpkg_gpgcheck=1
        dest: /etc/yum.conf
        mode: "0644"
        state: present
        create: true
        insertafter: "[main]"

    - name: Comment yum.conf repo_gpgcheck
      ansible.builtin.lineinfile:
        line: "# repo_gpgcheck=1"
        dest: /etc/yum.conf
        mode: "0644"
        state: present
        create: true
        insertafter: "[main]"

- name: Enable dnf repositories and upgrades
  become: true
  when:
    - ansible_facts.os_family == "RedHat"
  tags:
    - dnf
    - yum
  block:
    - name: Stat PowerTools repository files
      ansible.builtin.stat:
        path: "{{ item }}"
      with_items:
        - /etc/yum.repos.d/almalinux-crb.repo
        - /etc/yum.repos.d/almalinux-powertools.repo
        - /etc/yum.repos.d/CentOS-Linux-PowerTools.repo
        - /etc/yum.repos.d/CentOS-PowerTools.repo
        - /etc/yum.repos.d/CentOS-Stream-PowerTools.repo
      register: powertools_repo

    - name: Enable the PowerTools repository
      ansible.builtin.replace:
        regexp: ^enabled=.*$
        replace: enabled=1
        dest: "{{ item.stat.path }}"
      with_items:
        - "{{ powertools_repo.results }}"
      when:
        - item.stat.exists

    - name: Update dnf cache
      ansible.builtin.dnf:
        update_cache: true

    - name: Run dnf upgrade
      ansible.builtin.dnf:
        name: "*" # noqa: package-latest
        state: latest
        bugfix: true
        security: true
        nobest: true
      when:
        - system_upgrade | bool
      notify:
        - Run dnf autoremove
